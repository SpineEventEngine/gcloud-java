[{"name":"FIRESTORE_AS_DATASTORE","description":"io.spine.server.storage.datastore.DatastoreMode.FIRESTORE_AS_DATASTORE","location":"datastore/io.spine.server.storage.datastore/-datastore-mode/-f-i-r-e-s-t-o-r-e_-a-s_-d-a-t-a-s-t-o-r-e/index.html","searchKeys":["FIRESTORE_AS_DATASTORE","FIRESTORE_AS_DATASTORE","io.spine.server.storage.datastore.DatastoreMode.FIRESTORE_AS_DATASTORE"]},{"name":"NATIVE","description":"io.spine.server.storage.datastore.DatastoreMode.NATIVE","location":"datastore/io.spine.server.storage.datastore/-datastore-mode/-n-a-t-i-v-e/index.html","searchKeys":["NATIVE","NATIVE","io.spine.server.storage.datastore.DatastoreMode.NATIVE"]},{"name":"protected Array<MessageColumn<CatchUp>> columns()","description":"io.spine.server.storage.datastore.DsCatchUpStorage.columns","location":"datastore/io.spine.server.storage.datastore/-ds-catch-up-storage/columns.html","searchKeys":["columns","protected Array<MessageColumn<CatchUp>> columns()","io.spine.server.storage.datastore.DsCatchUpStorage.columns"]},{"name":"protected Array<MessageColumn<InboxMessage>> columns()","description":"io.spine.server.storage.datastore.DsInboxStorage.columns","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/columns.html","searchKeys":["columns","protected Array<MessageColumn<InboxMessage>> columns()","io.spine.server.storage.datastore.DsInboxStorage.columns"]},{"name":"protected Array<MessageColumn<ShardSessionRecord>> columns()","description":"io.spine.server.storage.datastore.DsSessionStorage.columns","location":"datastore/io.spine.server.storage.datastore/-ds-session-storage/columns.html","searchKeys":["columns","protected Array<MessageColumn<ShardSessionRecord>> columns()","io.spine.server.storage.datastore.DsSessionStorage.columns"]},{"name":"protected CatchUpId idOf(CatchUp message)","description":"io.spine.server.storage.datastore.DsCatchUpStorage.idOf","location":"datastore/io.spine.server.storage.datastore/-ds-catch-up-storage/id-of.html","searchKeys":["idOf","protected CatchUpId idOf(CatchUp message)","io.spine.server.storage.datastore.DsCatchUpStorage.idOf"]},{"name":"protected ColumnTypeMapping<Boolean, BooleanValue> ofBoolean()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofBoolean","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-boolean.html","searchKeys":["ofBoolean","protected ColumnTypeMapping<Boolean, BooleanValue> ofBoolean()","io.spine.server.storage.datastore.DsColumnMapping.ofBoolean"]},{"name":"protected ColumnTypeMapping<ByteString, BlobValue> ofByteString()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofByteString","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-byte-string.html","searchKeys":["ofByteString","protected ColumnTypeMapping<ByteString, BlobValue> ofByteString()","io.spine.server.storage.datastore.DsColumnMapping.ofByteString"]},{"name":"protected ColumnTypeMapping<Double, DoubleValue> ofDouble()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofDouble","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-double.html","searchKeys":["ofDouble","protected ColumnTypeMapping<Double, DoubleValue> ofDouble()","io.spine.server.storage.datastore.DsColumnMapping.ofDouble"]},{"name":"protected ColumnTypeMapping<Enum<?>, LongValue> ofEnum()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofEnum","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-enum.html","searchKeys":["ofEnum","protected ColumnTypeMapping<Enum<?>, LongValue> ofEnum()","io.spine.server.storage.datastore.DsColumnMapping.ofEnum"]},{"name":"protected ColumnTypeMapping<Float, DoubleValue> ofFloat()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofFloat","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-float.html","searchKeys":["ofFloat","protected ColumnTypeMapping<Float, DoubleValue> ofFloat()","io.spine.server.storage.datastore.DsColumnMapping.ofFloat"]},{"name":"protected ColumnTypeMapping<Integer, LongValue> ofInteger()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofInteger","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-integer.html","searchKeys":["ofInteger","protected ColumnTypeMapping<Integer, LongValue> ofInteger()","io.spine.server.storage.datastore.DsColumnMapping.ofInteger"]},{"name":"protected ColumnTypeMapping<Long, LongValue> ofLong()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofLong","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-long.html","searchKeys":["ofLong","protected ColumnTypeMapping<Long, LongValue> ofLong()","io.spine.server.storage.datastore.DsColumnMapping.ofLong"]},{"name":"protected ColumnTypeMapping<Message, StringValue> ofMessage()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofMessage","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-message.html","searchKeys":["ofMessage","protected ColumnTypeMapping<Message, StringValue> ofMessage()","io.spine.server.storage.datastore.DsColumnMapping.ofMessage"]},{"name":"protected ColumnTypeMapping<String, StringValue> ofString()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofString","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-string.html","searchKeys":["ofString","protected ColumnTypeMapping<String, StringValue> ofString()","io.spine.server.storage.datastore.DsColumnMapping.ofString"]},{"name":"protected DatastoreWrapper createDatastoreWrapper(boolean multitenant)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createDatastoreWrapper","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-datastore-wrapper.html","searchKeys":["createDatastoreWrapper","protected DatastoreWrapper createDatastoreWrapper(boolean multitenant)","io.spine.server.storage.datastore.DatastoreStorageFactory.createDatastoreWrapper"]},{"name":"protected DatastoreWrapper datastore()","description":"io.spine.server.storage.datastore.DsAggregateStorage.datastore","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/datastore.html","searchKeys":["datastore","protected DatastoreWrapper datastore()","io.spine.server.storage.datastore.DsAggregateStorage.datastore"]},{"name":"protected DatastoreWrapper getDatastore()","description":"io.spine.server.storage.datastore.DsPropertyStorage.getDatastore","location":"datastore/io.spine.server.storage.datastore/-ds-property-storage/get-datastore.html","searchKeys":["getDatastore","protected DatastoreWrapper getDatastore()","io.spine.server.storage.datastore.DsPropertyStorage.getDatastore"]},{"name":"protected DatastoreWrapper getDatastore()","description":"io.spine.server.storage.datastore.DsRecordStorage.getDatastore","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/get-datastore.html","searchKeys":["getDatastore","protected DatastoreWrapper getDatastore()","io.spine.server.storage.datastore.DsRecordStorage.getDatastore"]},{"name":"protected Datastore datastore()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.datastore","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/datastore.html","searchKeys":["datastore","protected Datastore datastore()","io.spine.server.storage.datastore.DatastoreStorageFactory.datastore"]},{"name":"protected DsPropertyStorage createPropertyStorage(ContextSpec spec)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createPropertyStorage","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-property-storage.html","searchKeys":["createPropertyStorage","protected DsPropertyStorage createPropertyStorage(ContextSpec spec)","io.spine.server.storage.datastore.DatastoreStorageFactory.createPropertyStorage"]},{"name":"protected DsSessionStorage storage()","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.storage","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/storage.html","searchKeys":["storage","protected DsSessionStorage storage()","io.spine.server.storage.datastore.DsShardedWorkRegistry.storage"]},{"name":"protected Entity entityRecordToEntity(I id, EntityRecordWithColumns record)","description":"io.spine.server.storage.datastore.DsRecordStorage.entityRecordToEntity","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/entity-record-to-entity.html","searchKeys":["entityRecordToEntity","protected Entity entityRecordToEntity(I id, EntityRecordWithColumns record)","io.spine.server.storage.datastore.DsRecordStorage.entityRecordToEntity"]},{"name":"protected InboxMessageId idOf(InboxMessage message)","description":"io.spine.server.storage.datastore.DsInboxStorage.idOf","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/id-of.html","searchKeys":["idOf","protected InboxMessageId idOf(InboxMessage message)","io.spine.server.storage.datastore.DsInboxStorage.idOf"]},{"name":"protected InboxStorage inboxStorageWith(DatastoreWrapper wrapper, boolean multitenant)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.inboxStorageWith","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/inbox-storage-with.html","searchKeys":["inboxStorageWith","protected InboxStorage inboxStorageWith(DatastoreWrapper wrapper, boolean multitenant)","io.spine.server.storage.datastore.DatastoreStorageFactory.inboxStorageWith"]},{"name":"protected Iterable<DatastoreWrapper> wrappers()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.wrappers","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/wrappers.html","searchKeys":["wrappers","protected Iterable<DatastoreWrapper> wrappers()","io.spine.server.storage.datastore.DatastoreStorageFactory.wrappers"]},{"name":"protected Iterator<AggregateEventRecord> historyBackward(AggregateReadRequest<I> request)","description":"io.spine.server.storage.datastore.DsAggregateStorage.historyBackward","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/history-backward.html","searchKeys":["historyBackward","protected Iterator<AggregateEventRecord> historyBackward(AggregateReadRequest<I> request)","io.spine.server.storage.datastore.DsAggregateStorage.historyBackward"]},{"name":"protected Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","description":"io.spine.server.storage.datastore.DsRecordStorage.readAllRecords","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/read-all-records.html","searchKeys":["readAllRecords","protected Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","io.spine.server.storage.datastore.DsRecordStorage.readAllRecords"]},{"name":"protected Iterator<EntityRecord> readAllRecords(ResponseFormat format)","description":"io.spine.server.storage.datastore.DsProjectionStorage.readAllRecords","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/read-all-records.html","searchKeys":["readAllRecords","protected Iterator<EntityRecord> readAllRecords(ResponseFormat format)","io.spine.server.storage.datastore.DsProjectionStorage.readAllRecords"]},{"name":"protected Iterator<EntityRecord> readAllRecords(ResponseFormat format)","description":"io.spine.server.storage.datastore.DsRecordStorage.readAllRecords","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/read-all-records.html","searchKeys":["readAllRecords","protected Iterator<EntityRecord> readAllRecords(ResponseFormat format)","io.spine.server.storage.datastore.DsRecordStorage.readAllRecords"]},{"name":"protected Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","description":"io.spine.server.storage.datastore.DsProjectionStorage.readMultipleRecords","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/read-multiple-records.html","searchKeys":["readMultipleRecords","protected Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","io.spine.server.storage.datastore.DsProjectionStorage.readMultipleRecords"]},{"name":"protected Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","description":"io.spine.server.storage.datastore.DsRecordStorage.readMultipleRecords","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/read-multiple-records.html","searchKeys":["readMultipleRecords","protected Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","io.spine.server.storage.datastore.DsRecordStorage.readMultipleRecords"]},{"name":"protected Iterator<I> distinctAggregateIds()","description":"io.spine.server.storage.datastore.DsAggregateStorage.distinctAggregateIds","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/distinct-aggregate-ids.html","searchKeys":["distinctAggregateIds","protected Iterator<I> distinctAggregateIds()","io.spine.server.storage.datastore.DsAggregateStorage.distinctAggregateIds"]},{"name":"protected Iterator<M> read(Builder queryBuilder)","description":"io.spine.server.storage.datastore.DsMessageStorage.read","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/read.html","searchKeys":["read","protected Iterator<M> read(Builder queryBuilder)","io.spine.server.storage.datastore.DsMessageStorage.read"]},{"name":"protected Iterator<M> readAll(Builder queryBuilder, int readBatchSize)","description":"io.spine.server.storage.datastore.DsMessageStorage.readAll","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/read-all.html","searchKeys":["readAll","protected Iterator<M> readAll(Builder queryBuilder, int readBatchSize)","io.spine.server.storage.datastore.DsMessageStorage.readAll"]},{"name":"protected Iterator<M> readAllTransactionally(Builder queryBuilder)","description":"io.spine.server.storage.datastore.DsMessageStorage.readAllTransactionally","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/read-all-transactionally.html","searchKeys":["readAllTransactionally","protected Iterator<M> readAllTransactionally(Builder queryBuilder)","io.spine.server.storage.datastore.DsMessageStorage.readAllTransactionally"]},{"name":"protected Iterator<M> readAllTransactionally(Builder queryBuilder, int limit)","description":"io.spine.server.storage.datastore.DsMessageStorage.readAllTransactionally","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/read-all-transactionally.html","searchKeys":["readAllTransactionally","protected Iterator<M> readAllTransactionally(Builder queryBuilder, int limit)","io.spine.server.storage.datastore.DsMessageStorage.readAllTransactionally"]},{"name":"protected Iterator<ShardSessionRecord> allRecords()","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.allRecords","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/all-records.html","searchKeys":["allRecords","protected Iterator<ShardSessionRecord> allRecords()","io.spine.server.storage.datastore.DsShardedWorkRegistry.allRecords"]},{"name":"protected Key key(I id)","description":"io.spine.server.storage.datastore.DsMessageStorage.key","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/key.html","searchKeys":["key","protected Key key(I id)","io.spine.server.storage.datastore.DsMessageStorage.key"]},{"name":"protected Kind getKind()","description":"io.spine.server.storage.datastore.DsRecordStorage.getKind","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/get-kind.html","searchKeys":["getKind","protected Kind getKind()","io.spine.server.storage.datastore.DsRecordStorage.getKind"]},{"name":"protected Optional<EntityRecord> readRecord(I id)","description":"io.spine.server.storage.datastore.DsRecordStorage.readRecord","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/read-record.html","searchKeys":["readRecord","protected Optional<EntityRecord> readRecord(I id)","io.spine.server.storage.datastore.DsRecordStorage.readRecord"]},{"name":"protected Optional<Message> read(RecordId propertyId, Descriptor targetType)","description":"io.spine.server.storage.datastore.DsPropertyStorage.read","location":"datastore/io.spine.server.storage.datastore/-ds-property-storage/read.html","searchKeys":["read","protected Optional<Message> read(RecordId propertyId, Descriptor targetType)","io.spine.server.storage.datastore.DsPropertyStorage.read"]},{"name":"protected Optional<ShardSessionRecord> find(ShardIndex index)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.find","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/find.html","searchKeys":["find","protected Optional<ShardSessionRecord> find(ShardIndex index)","io.spine.server.storage.datastore.DsShardedWorkRegistry.find"]},{"name":"protected RecordId toLifecycleRecordId(I id)","description":"io.spine.server.storage.datastore.DsAggregateStorage.toLifecycleRecordId","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/to-lifecycle-record-id.html","searchKeys":["toLifecycleRecordId","protected RecordId toLifecycleRecordId(I id)","io.spine.server.storage.datastore.DsAggregateStorage.toLifecycleRecordId"]},{"name":"protected RecordId toSnapshotId(I id, Snapshot snapshot)","description":"io.spine.server.storage.datastore.DsAggregateStorage.toSnapshotId","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/to-snapshot-id.html","searchKeys":["toSnapshotId","protected RecordId toSnapshotId(I id, Snapshot snapshot)","io.spine.server.storage.datastore.DsAggregateStorage.toSnapshotId"]},{"name":"protected ShardIndex idOf(ShardSessionRecord message)","description":"io.spine.server.storage.datastore.DsSessionStorage.idOf","location":"datastore/io.spine.server.storage.datastore/-ds-session-storage/id-of.html","searchKeys":["idOf","protected ShardIndex idOf(ShardSessionRecord message)","io.spine.server.storage.datastore.DsSessionStorage.idOf"]},{"name":"protected WorkerId currentWorkerFor(NodeId id)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.currentWorkerFor","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/current-worker-for.html","searchKeys":["currentWorkerFor","protected WorkerId currentWorkerFor(NodeId id)","io.spine.server.storage.datastore.DsShardedWorkRegistry.currentWorkerFor"]},{"name":"protected abstract Array<MessageColumn<M>> columns()","description":"io.spine.server.storage.datastore.DsMessageStorage.columns","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/columns.html","searchKeys":["columns","protected abstract Array<MessageColumn<M>> columns()","io.spine.server.storage.datastore.DsMessageStorage.columns"]},{"name":"protected abstract I idOf(M message)","description":"io.spine.server.storage.datastore.DsMessageStorage.idOf","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/id-of.html","searchKeys":["idOf","protected abstract I idOf(M message)","io.spine.server.storage.datastore.DsMessageStorage.idOf"]},{"name":"protected abstract String toString(TenantId tenantId)","description":"io.spine.server.storage.datastore.tenant.NamespaceConverter.toString","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-converter/to-string.html","searchKeys":["toString","protected abstract String toString(TenantId tenantId)","io.spine.server.storage.datastore.tenant.NamespaceConverter.toString"]},{"name":"protected abstract TenantId toTenantId(String namespace)","description":"io.spine.server.storage.datastore.tenant.NamespaceConverter.toTenantId","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-converter/to-tenant-id.html","searchKeys":["toTenantId","protected abstract TenantId toTenantId(String namespace)","io.spine.server.storage.datastore.tenant.NamespaceConverter.toTenantId"]},{"name":"protected final Entity toEntity(M message)","description":"io.spine.server.storage.datastore.DsMessageStorage.toEntity","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/to-entity.html","searchKeys":["toEntity","protected final Entity toEntity(M message)","io.spine.server.storage.datastore.DsMessageStorage.toEntity"]},{"name":"protected final Key key(InboxMessageId id)","description":"io.spine.server.storage.datastore.DsInboxStorage.key","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/key.html","searchKeys":["key","protected final Key key(InboxMessageId id)","io.spine.server.storage.datastore.DsInboxStorage.key"]},{"name":"protected final Key key(RecordId recordId)","description":"io.spine.server.storage.datastore.DsMessageStorage.key","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/key.html","searchKeys":["key","protected final Key key(RecordId recordId)","io.spine.server.storage.datastore.DsMessageStorage.key"]},{"name":"protected final Key keyWithAncestor(String keyValue, PathElement ancestor)","description":"io.spine.server.storage.datastore.DsMessageStorage.keyWithAncestor","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/key-with-ancestor.html","searchKeys":["keyWithAncestor","protected final Key keyWithAncestor(String keyValue, PathElement ancestor)","io.spine.server.storage.datastore.DsMessageStorage.keyWithAncestor"]},{"name":"protected final Key parentKey(Kind parentKind, Object parentId)","description":"io.spine.server.storage.datastore.DsMessageStorage.parentKey","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/parent-key.html","searchKeys":["parentKey","protected final Key parentKey(Kind parentKind, Object parentId)","io.spine.server.storage.datastore.DsMessageStorage.parentKey"]},{"name":"protected final M toMessage(Entity e)","description":"io.spine.server.storage.datastore.DsMessageStorage.toMessage","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/to-message.html","searchKeys":["toMessage","protected final M toMessage(Entity e)","io.spine.server.storage.datastore.DsMessageStorage.toMessage"]},{"name":"protected final String doBackward(TenantId tenantId)","description":"io.spine.server.storage.datastore.tenant.NamespaceConverter.doBackward","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-converter/do-backward.html","searchKeys":["doBackward","protected final String doBackward(TenantId tenantId)","io.spine.server.storage.datastore.tenant.NamespaceConverter.doBackward"]},{"name":"protected final TenantId doForward(String s)","description":"io.spine.server.storage.datastore.tenant.NamespaceConverter.doForward","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-converter/do-forward.html","searchKeys":["doForward","protected final TenantId doForward(String s)","io.spine.server.storage.datastore.tenant.NamespaceConverter.doForward"]},{"name":"protected final TransactionWrapper newTransaction()","description":"io.spine.server.storage.datastore.DsMessageStorage.newTransaction","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/new-transaction.html","searchKeys":["newTransaction","protected final TransactionWrapper newTransaction()","io.spine.server.storage.datastore.DsMessageStorage.newTransaction"]},{"name":"protected final void writeTransactionally(M message)","description":"io.spine.server.storage.datastore.DsMessageStorage.writeTransactionally","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/write-transactionally.html","searchKeys":["writeTransactionally","protected final void writeTransactionally(M message)","io.spine.server.storage.datastore.DsMessageStorage.writeTransactionally"]},{"name":"protected synchronized void clearNode(ShardSessionRecord session)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.clearNode","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/clear-node.html","searchKeys":["clearNode","protected synchronized void clearNode(ShardSessionRecord session)","io.spine.server.storage.datastore.DsShardedWorkRegistry.clearNode"]},{"name":"protected void DatastoreStorageFactory(DatastoreStorageFactory.Builder builder)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.DatastoreStorageFactory","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-datastore-storage-factory.html","searchKeys":["DatastoreStorageFactory","protected void DatastoreStorageFactory(DatastoreStorageFactory.Builder builder)","io.spine.server.storage.datastore.DatastoreStorageFactory.DatastoreStorageFactory"]},{"name":"protected void DatastoreWrapper(Datastore datastore, NamespaceSupplier supplier)","description":"io.spine.server.storage.datastore.DatastoreWrapper.DatastoreWrapper","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/-datastore-wrapper.html","searchKeys":["DatastoreWrapper","protected void DatastoreWrapper(Datastore datastore, NamespaceSupplier supplier)","io.spine.server.storage.datastore.DatastoreWrapper.DatastoreWrapper"]},{"name":"protected void DsAggregateStorage(Class<? extends Aggregate<I, ?, ?>> cls, DatastoreWrapper datastore, boolean multitenant)","description":"io.spine.server.storage.datastore.DsAggregateStorage.DsAggregateStorage","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/-ds-aggregate-storage.html","searchKeys":["DsAggregateStorage","protected void DsAggregateStorage(Class<? extends Aggregate<I, ?, ?>> cls, DatastoreWrapper datastore, boolean multitenant)","io.spine.server.storage.datastore.DsAggregateStorage.DsAggregateStorage"]},{"name":"protected void DsCatchUpStorage(DatastoreWrapper datastore, boolean multitenant)","description":"io.spine.server.storage.datastore.DsCatchUpStorage.DsCatchUpStorage","location":"datastore/io.spine.server.storage.datastore/-ds-catch-up-storage/-ds-catch-up-storage.html","searchKeys":["DsCatchUpStorage","protected void DsCatchUpStorage(DatastoreWrapper datastore, boolean multitenant)","io.spine.server.storage.datastore.DsCatchUpStorage.DsCatchUpStorage"]},{"name":"protected void DsInboxStorage(DatastoreWrapper datastore, boolean multitenant)","description":"io.spine.server.storage.datastore.DsInboxStorage.DsInboxStorage","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/-ds-inbox-storage.html","searchKeys":["DsInboxStorage","protected void DsInboxStorage(DatastoreWrapper datastore, boolean multitenant)","io.spine.server.storage.datastore.DsInboxStorage.DsInboxStorage"]},{"name":"protected void DsInboxStorage(DatastoreWrapper datastore, boolean multitenant, DatastoreMode mode)","description":"io.spine.server.storage.datastore.DsInboxStorage.DsInboxStorage","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/-ds-inbox-storage.html","searchKeys":["DsInboxStorage","protected void DsInboxStorage(DatastoreWrapper datastore, boolean multitenant, DatastoreMode mode)","io.spine.server.storage.datastore.DsInboxStorage.DsInboxStorage"]},{"name":"protected void DsMessageStorage(DatastoreWrapper datastore, boolean multitenant)","description":"io.spine.server.storage.datastore.DsMessageStorage.DsMessageStorage","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/-ds-message-storage.html","searchKeys":["DsMessageStorage","protected void DsMessageStorage(DatastoreWrapper datastore, boolean multitenant)","io.spine.server.storage.datastore.DsMessageStorage.DsMessageStorage"]},{"name":"protected void DsProjectionStorage(Class<? extends Projection<I, ?, ?>> projectionClass, DsRecordStorage<I> recordStorage, boolean multitenant)","description":"io.spine.server.storage.datastore.DsProjectionStorage.DsProjectionStorage","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/-ds-projection-storage.html","searchKeys":["DsProjectionStorage","protected void DsProjectionStorage(Class<? extends Projection<I, ?, ?>> projectionClass, DsRecordStorage<I> recordStorage, boolean multitenant)","io.spine.server.storage.datastore.DsProjectionStorage.DsProjectionStorage"]},{"name":"protected void DsRecordStorage(RecordStorageBuilder<I, ? extends RecordStorage<I>, ? extends RecordStorageBuilder<I, ? extends RecordStorage<I>, ? extends Object>> b)","description":"io.spine.server.storage.datastore.DsRecordStorage.DsRecordStorage","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/-ds-record-storage.html","searchKeys":["DsRecordStorage","protected void DsRecordStorage(RecordStorageBuilder<I, ? extends RecordStorage<I>, ? extends RecordStorageBuilder<I, ? extends RecordStorage<I>, ? extends Object>> b)","io.spine.server.storage.datastore.DsRecordStorage.DsRecordStorage"]},{"name":"protected void deleteEntities(Collection<Entity> entities)","description":"io.spine.server.storage.datastore.DatastoreWrapper.deleteEntities","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/delete-entities.html","searchKeys":["deleteEntities","protected void deleteEntities(Collection<Entity> entities)","io.spine.server.storage.datastore.DatastoreWrapper.deleteEntities"]},{"name":"protected void dropTable(Kind table)","description":"io.spine.server.storage.datastore.DatastoreWrapper.dropTable","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/drop-table.html","searchKeys":["dropTable","protected void dropTable(Kind table)","io.spine.server.storage.datastore.DatastoreWrapper.dropTable"]},{"name":"protected void setupCustomMapping(Builder<Class<?>, ColumnTypeMapping<?, ? extends Value<?>>> builder)","description":"io.spine.server.storage.datastore.DsColumnMapping.setupCustomMapping","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/setup-custom-mapping.html","searchKeys":["setupCustomMapping","protected void setupCustomMapping(Builder<Class<?>, ColumnTypeMapping<?, ? extends Value<?>>> builder)","io.spine.server.storage.datastore.DsColumnMapping.setupCustomMapping"]},{"name":"protected void truncate(int snapshotIndex)","description":"io.spine.server.storage.datastore.DsAggregateStorage.truncate","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/truncate.html","searchKeys":["truncate","protected void truncate(int snapshotIndex)","io.spine.server.storage.datastore.DsAggregateStorage.truncate"]},{"name":"protected void truncate(int snapshotIndex, Timestamp date)","description":"io.spine.server.storage.datastore.DsAggregateStorage.truncate","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/truncate.html","searchKeys":["truncate","protected void truncate(int snapshotIndex, Timestamp date)","io.spine.server.storage.datastore.DsAggregateStorage.truncate"]},{"name":"protected void write(ShardSessionRecord session)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.write","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/write.html","searchKeys":["write","protected void write(ShardSessionRecord session)","io.spine.server.storage.datastore.DsShardedWorkRegistry.write"]},{"name":"protected void write<V extends Message>(RecordId propertyId, V value)","description":"io.spine.server.storage.datastore.DsPropertyStorage.write","location":"datastore/io.spine.server.storage.datastore/-ds-property-storage/write.html","searchKeys":["write","protected void write<V extends Message>(RecordId propertyId, V value)","io.spine.server.storage.datastore.DsPropertyStorage.write"]},{"name":"protected void writeAllTransactionally(Iterable<M> messages)","description":"io.spine.server.storage.datastore.DsMessageStorage.writeAllTransactionally","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/write-all-transactionally.html","searchKeys":["writeAllTransactionally","protected void writeAllTransactionally(Iterable<M> messages)","io.spine.server.storage.datastore.DsMessageStorage.writeAllTransactionally"]},{"name":"protected void writeRecord(I id, AggregateEventRecord record)","description":"io.spine.server.storage.datastore.DsAggregateStorage.writeRecord","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/write-record.html","searchKeys":["writeRecord","protected void writeRecord(I id, AggregateEventRecord record)","io.spine.server.storage.datastore.DsAggregateStorage.writeRecord"]},{"name":"protected void writeRecord(I id, EntityRecordWithColumns entityStorageRecord)","description":"io.spine.server.storage.datastore.DsRecordStorage.writeRecord","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/write-record.html","searchKeys":["writeRecord","protected void writeRecord(I id, EntityRecordWithColumns entityStorageRecord)","io.spine.server.storage.datastore.DsRecordStorage.writeRecord"]},{"name":"protected void writeRecords(Map<I, EntityRecordWithColumns> records)","description":"io.spine.server.storage.datastore.DsRecordStorage.writeRecords","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/write-records.html","searchKeys":["writeRecords","protected void writeRecords(Map<I, EntityRecordWithColumns> records)","io.spine.server.storage.datastore.DsRecordStorage.writeRecords"]},{"name":"public AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ?, ?>> cls)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createAggregateStorage","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-aggregate-storage.html","searchKeys":["createAggregateStorage","public AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ?, ?>> cls)","io.spine.server.storage.datastore.DatastoreStorageFactory.createAggregateStorage"]},{"name":"public BoundedContextBuilder configureTenantIndex(BoundedContextBuilder builder)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.configureTenantIndex","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/configure-tenant-index.html","searchKeys":["configureTenantIndex","public BoundedContextBuilder configureTenantIndex(BoundedContextBuilder builder)","io.spine.server.storage.datastore.DatastoreStorageFactory.configureTenantIndex"]},{"name":"public CatchUpStorage createCatchUpStorage(boolean multitenant)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createCatchUpStorage","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-catch-up-storage.html","searchKeys":["createCatchUpStorage","public CatchUpStorage createCatchUpStorage(boolean multitenant)","io.spine.server.storage.datastore.DatastoreStorageFactory.createCatchUpStorage"]},{"name":"public ColumnMapping<Value<?>> columnMapping()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.columnMapping","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/column-mapping.html","searchKeys":["columnMapping","public ColumnMapping<Value<?>> columnMapping()","io.spine.server.storage.datastore.DatastoreStorageFactory.columnMapping"]},{"name":"public ColumnTypeMapping<?, ? extends Value<?>> ofNull()","description":"io.spine.server.storage.datastore.DsColumnMapping.ofNull","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/of-null.html","searchKeys":["ofNull","public ColumnTypeMapping<?, ? extends Value<?>> ofNull()","io.spine.server.storage.datastore.DsColumnMapping.ofNull"]},{"name":"public DatastoreStorageFactory.Builder setColumnMapping(ColumnMapping<Value<?>> columnMapping)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.setColumnMapping","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-builder/set-column-mapping.html","searchKeys":["setColumnMapping","public DatastoreStorageFactory.Builder setColumnMapping(ColumnMapping<Value<?>> columnMapping)","io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.setColumnMapping"]},{"name":"public DatastoreStorageFactory.Builder setDatastore(Datastore datastore)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.setDatastore","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-builder/set-datastore.html","searchKeys":["setDatastore","public DatastoreStorageFactory.Builder setDatastore(Datastore datastore)","io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.setDatastore"]},{"name":"public DatastoreStorageFactory.Builder setNamespaceConverter(NamespaceConverter converter)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.setNamespaceConverter","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-builder/set-namespace-converter.html","searchKeys":["setNamespaceConverter","public DatastoreStorageFactory.Builder setNamespaceConverter(NamespaceConverter converter)","io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.setNamespaceConverter"]},{"name":"public DatastoreStorageFactory build()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.build","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-builder/build.html","searchKeys":["build","public DatastoreStorageFactory build()","io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.build"]},{"name":"public Datastore datastore()","description":"io.spine.server.storage.datastore.DatastoreWrapper.datastore","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/datastore.html","searchKeys":["datastore","public Datastore datastore()","io.spine.server.storage.datastore.DatastoreWrapper.datastore"]},{"name":"public Datastore getDatastore()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.getDatastore","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-builder/get-datastore.html","searchKeys":["getDatastore","public Datastore getDatastore()","io.spine.server.storage.datastore.DatastoreStorageFactory.Builder.getDatastore"]},{"name":"public DsProjectionStorageDelegate<I> build()","description":"io.spine.server.storage.datastore.DsProjectionStorageDelegate.Builder.build","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage-delegate/-builder/build.html","searchKeys":["build","public DsProjectionStorageDelegate<I> build()","io.spine.server.storage.datastore.DsProjectionStorageDelegate.Builder.build"]},{"name":"public DsQueryIterator<R> read<R>(StructuredQuery<R> ancestorQuery)","description":"io.spine.server.storage.datastore.TransactionWrapper.read","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/read.html","searchKeys":["read","public DsQueryIterator<R> read<R>(StructuredQuery<R> ancestorQuery)","io.spine.server.storage.datastore.TransactionWrapper.read"]},{"name":"public DsQueryIterator<R> read<R>(StructuredQuery<R> query)","description":"io.spine.server.storage.datastore.DatastoreWrapper.read","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/read.html","searchKeys":["read","public DsQueryIterator<R> read<R>(StructuredQuery<R> query)","io.spine.server.storage.datastore.DatastoreWrapper.read"]},{"name":"public DsRecordStorage<I> build()","description":"io.spine.server.storage.datastore.DsRecordStorage.Builder.build","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/-builder/build.html","searchKeys":["build","public DsRecordStorage<I> build()","io.spine.server.storage.datastore.DsRecordStorage.Builder.build"]},{"name":"public Entity read(Key key)","description":"io.spine.server.storage.datastore.DatastoreWrapper.read","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/read.html","searchKeys":["read","public Entity read(Key key)","io.spine.server.storage.datastore.DatastoreWrapper.read"]},{"name":"public Iterable<CatchUp> readAll()","description":"io.spine.server.storage.datastore.DsCatchUpStorage.readAll","location":"datastore/io.spine.server.storage.datastore/-ds-catch-up-storage/read-all.html","searchKeys":["readAll","public Iterable<CatchUp> readAll()","io.spine.server.storage.datastore.DsCatchUpStorage.readAll"]},{"name":"public Iterable<CatchUp> readByType(TypeUrl url)","description":"io.spine.server.storage.datastore.DsCatchUpStorage.readByType","location":"datastore/io.spine.server.storage.datastore/-ds-catch-up-storage/read-by-type.html","searchKeys":["readByType","public Iterable<CatchUp> readByType(TypeUrl url)","io.spine.server.storage.datastore.DsCatchUpStorage.readByType"]},{"name":"public Iterator<Entity> read(Iterable<Key> keys)","description":"io.spine.server.storage.datastore.DatastoreWrapper.read","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/read.html","searchKeys":["read","public Iterator<Entity> read(Iterable<Key> keys)","io.spine.server.storage.datastore.DatastoreWrapper.read"]},{"name":"public Iterator<I> index()","description":"io.spine.server.storage.datastore.DsMessageStorage.index","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/--index--.html","searchKeys":["index","public Iterator<I> index()","io.spine.server.storage.datastore.DsMessageStorage.index"]},{"name":"public Iterator<I> index()","description":"io.spine.server.storage.datastore.DsProjectionStorage.index","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/--index--.html","searchKeys":["index","public Iterator<I> index()","io.spine.server.storage.datastore.DsProjectionStorage.index"]},{"name":"public Iterator<I> index()","description":"io.spine.server.storage.datastore.DsRecordStorage.index","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/--index--.html","searchKeys":["index","public Iterator<I> index()","io.spine.server.storage.datastore.DsRecordStorage.index"]},{"name":"public Iterator<R> readAll<R>(StructuredQuery<R> query)","description":"io.spine.server.storage.datastore.DatastoreWrapper.readAll","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/read-all.html","searchKeys":["readAll","public Iterator<R> readAll<R>(StructuredQuery<R> query)","io.spine.server.storage.datastore.DatastoreWrapper.readAll"]},{"name":"public Iterator<R> readAll<R>(StructuredQuery<R> query, int pageSize)","description":"io.spine.server.storage.datastore.DatastoreWrapper.readAll","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/read-all.html","searchKeys":["readAll","public Iterator<R> readAll<R>(StructuredQuery<R> query, int pageSize)","io.spine.server.storage.datastore.DatastoreWrapper.readAll"]},{"name":"public KeyFactory keyFactory(Kind kind)","description":"io.spine.server.storage.datastore.DatastoreWrapper.keyFactory","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/key-factory.html","searchKeys":["keyFactory","public KeyFactory keyFactory(Kind kind)","io.spine.server.storage.datastore.DatastoreWrapper.keyFactory"]},{"name":"public List<Entity> lookup(Collection<Key> keys)","description":"io.spine.server.storage.datastore.DatastoreWrapper.lookup","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/lookup.html","searchKeys":["lookup","public List<Entity> lookup(Collection<Key> keys)","io.spine.server.storage.datastore.DatastoreWrapper.lookup"]},{"name":"public List<Entity> lookup(Collection<Key> keys)","description":"io.spine.server.storage.datastore.TransactionWrapper.lookup","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/lookup.html","searchKeys":["lookup","public List<Entity> lookup(Collection<Key> keys)","io.spine.server.storage.datastore.TransactionWrapper.lookup"]},{"name":"public NamespaceConverter get(boolean multitenant)","description":"io.spine.server.storage.datastore.tenant.PrefixedNsConverterFactory.get","location":"datastore/io.spine.server.storage.datastore.tenant/-prefixed-ns-converter-factory/get.html","searchKeys":["get","public NamespaceConverter get(boolean multitenant)","io.spine.server.storage.datastore.tenant.PrefixedNsConverterFactory.get"]},{"name":"public Optional<Entity> read(Key key)","description":"io.spine.server.storage.datastore.TransactionWrapper.read","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/read.html","searchKeys":["read","public Optional<Entity> read(Key key)","io.spine.server.storage.datastore.TransactionWrapper.read"]},{"name":"public Optional<InboxMessage> newestMessageToDeliver(ShardIndex index)","description":"io.spine.server.storage.datastore.DsInboxStorage.newestMessageToDeliver","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/newest-message-to-deliver.html","searchKeys":["newestMessageToDeliver","public Optional<InboxMessage> newestMessageToDeliver(ShardIndex index)","io.spine.server.storage.datastore.DsInboxStorage.newestMessageToDeliver"]},{"name":"public Optional<LifecycleFlags> readLifecycleFlags(I id)","description":"io.spine.server.storage.datastore.DsAggregateStorage.readLifecycleFlags","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/read-lifecycle-flags.html","searchKeys":["readLifecycleFlags","public Optional<LifecycleFlags> readLifecycleFlags(I id)","io.spine.server.storage.datastore.DsAggregateStorage.readLifecycleFlags"]},{"name":"public Optional<M> read(R request)","description":"io.spine.server.storage.datastore.DsMessageStorage.read","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/read.html","searchKeys":["read","public Optional<M> read(R request)","io.spine.server.storage.datastore.DsMessageStorage.read"]},{"name":"public Optional<M> readTransactionally(R request)","description":"io.spine.server.storage.datastore.DsMessageStorage.readTransactionally","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/read-transactionally.html","searchKeys":["readTransactionally","public Optional<M> readTransactionally(R request)","io.spine.server.storage.datastore.DsMessageStorage.readTransactionally"]},{"name":"public Page<InboxMessage> readAll(ShardIndex index, int pageSize)","description":"io.spine.server.storage.datastore.DsInboxStorage.readAll","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/read-all.html","searchKeys":["readAll","public Page<InboxMessage> readAll(ShardIndex index, int pageSize)","io.spine.server.storage.datastore.DsInboxStorage.readAll"]},{"name":"public ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ?, ?>> cls)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createProjectionStorage","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-projection-storage.html","searchKeys":["createProjectionStorage","public ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ?, ?>> cls)","io.spine.server.storage.datastore.DatastoreStorageFactory.createProjectionStorage"]},{"name":"public RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ?>> cls)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createRecordStorage","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-record-storage.html","searchKeys":["createRecordStorage","public RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ?>> cls)","io.spine.server.storage.datastore.DatastoreStorageFactory.createRecordStorage"]},{"name":"public RecordStorage<I> recordStorage()","description":"io.spine.server.storage.datastore.DsProjectionStorage.recordStorage","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/record-storage.html","searchKeys":["recordStorage","public RecordStorage<I> recordStorage()","io.spine.server.storage.datastore.DsProjectionStorage.recordStorage"]},{"name":"public R next()","description":"io.spine.server.storage.datastore.DsQueryIterator.next","location":"datastore/io.spine.server.storage.datastore/-ds-query-iterator/next.html","searchKeys":["next","public R next()","io.spine.server.storage.datastore.DsQueryIterator.next"]},{"name":"public String getValue()","description":"io.spine.server.storage.datastore.tenant.Namespace.getValue","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace/get-value.html","searchKeys":["getValue","public String getValue()","io.spine.server.storage.datastore.tenant.Namespace.getValue"]},{"name":"public String toString()","description":"io.spine.server.storage.datastore.tenant.Namespace.toString","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace/to-string.html","searchKeys":["toString","public String toString()","io.spine.server.storage.datastore.tenant.Namespace.toString"]},{"name":"public String value()","description":"io.spine.server.storage.datastore.tenant.Namespace.value","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace/value.html","searchKeys":["value","public String value()","io.spine.server.storage.datastore.tenant.Namespace.value"]},{"name":"public abstract NamespaceConverter get(boolean multitenant)","description":"io.spine.server.storage.datastore.tenant.NsConverterFactory.get","location":"datastore/io.spine.server.storage.datastore.tenant/-ns-converter-factory/get.html","searchKeys":["get","public abstract NamespaceConverter get(boolean multitenant)","io.spine.server.storage.datastore.tenant.NsConverterFactory.get"]},{"name":"public abstract Namespace get()","description":"io.spine.server.storage.datastore.tenant.NamespaceSupplier.get","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-supplier/get.html","searchKeys":["get","public abstract Namespace get()","io.spine.server.storage.datastore.tenant.NamespaceSupplier.get"]},{"name":"public abstract boolean isMultitenant()","description":"io.spine.server.storage.datastore.tenant.NamespaceSupplier.isMultitenant","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-supplier/is-multitenant.html","searchKeys":["isMultitenant","public abstract boolean isMultitenant()","io.spine.server.storage.datastore.tenant.NamespaceSupplier.isMultitenant"]},{"name":"public abstract class DsMessageStorage<I, M extends Message, R extends ReadRequest<I>>","description":"io.spine.server.storage.datastore.DsMessageStorage","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/index.html","searchKeys":["DsMessageStorage","public abstract class DsMessageStorage<I, M extends Message, R extends ReadRequest<I>>","io.spine.server.storage.datastore.DsMessageStorage"]},{"name":"public abstract class NamespaceConverter","description":"io.spine.server.storage.datastore.tenant.NamespaceConverter","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-converter/index.html","searchKeys":["NamespaceConverter","public abstract class NamespaceConverter","io.spine.server.storage.datastore.tenant.NamespaceConverter"]},{"name":"public abstract class NamespaceSupplier","description":"io.spine.server.storage.datastore.tenant.NamespaceSupplier","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-supplier/index.html","searchKeys":["NamespaceSupplier","public abstract class NamespaceSupplier","io.spine.server.storage.datastore.tenant.NamespaceSupplier"]},{"name":"public boolean delete(I id)","description":"io.spine.server.storage.datastore.DsProjectionStorage.delete","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/delete.html","searchKeys":["delete","public boolean delete(I id)","io.spine.server.storage.datastore.DsProjectionStorage.delete"]},{"name":"public boolean delete(I id)","description":"io.spine.server.storage.datastore.DsRecordStorage.delete","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/delete.html","searchKeys":["delete","public boolean delete(I id)","io.spine.server.storage.datastore.DsRecordStorage.delete"]},{"name":"public boolean equals(Object o)","description":"io.spine.server.storage.datastore.tenant.Namespace.equals","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace/equals.html","searchKeys":["equals","public boolean equals(Object o)","io.spine.server.storage.datastore.tenant.Namespace.equals"]},{"name":"public boolean hasNext()","description":"io.spine.server.storage.datastore.DsQueryIterator.hasNext","location":"datastore/io.spine.server.storage.datastore/-ds-query-iterator/has-next.html","searchKeys":["hasNext","public boolean hasNext()","io.spine.server.storage.datastore.DsQueryIterator.hasNext"]},{"name":"public class Builder","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.Builder","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.server.storage.datastore.DatastoreStorageFactory.Builder"]},{"name":"public class DatastoreStorageFactory","description":"io.spine.server.storage.datastore.DatastoreStorageFactory","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/index.html","searchKeys":["DatastoreStorageFactory","public class DatastoreStorageFactory","io.spine.server.storage.datastore.DatastoreStorageFactory"]},{"name":"public class DatastoreWrapper","description":"io.spine.server.storage.datastore.DatastoreWrapper","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/index.html","searchKeys":["DatastoreWrapper","public class DatastoreWrapper","io.spine.server.storage.datastore.DatastoreWrapper"]},{"name":"public class DsAggregateStorage<I>","description":"io.spine.server.storage.datastore.DsAggregateStorage","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/index.html","searchKeys":["DsAggregateStorage","public class DsAggregateStorage<I>","io.spine.server.storage.datastore.DsAggregateStorage"]},{"name":"public class DsCatchUpStorage extends DsMessageStorage<I, M, R>","description":"io.spine.server.storage.datastore.DsCatchUpStorage","location":"datastore/io.spine.server.storage.datastore/-ds-catch-up-storage/index.html","searchKeys":["DsCatchUpStorage","public class DsCatchUpStorage extends DsMessageStorage<I, M, R>","io.spine.server.storage.datastore.DsCatchUpStorage"]},{"name":"public class DsColumnMapping","description":"io.spine.server.storage.datastore.DsColumnMapping","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/index.html","searchKeys":["DsColumnMapping","public class DsColumnMapping","io.spine.server.storage.datastore.DsColumnMapping"]},{"name":"public class DsInboxStorage extends DsMessageStorage<I, M, R>","description":"io.spine.server.storage.datastore.DsInboxStorage","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/index.html","searchKeys":["DsInboxStorage","public class DsInboxStorage extends DsMessageStorage<I, M, R>","io.spine.server.storage.datastore.DsInboxStorage"]},{"name":"public class DsProjectionStorage<I>","description":"io.spine.server.storage.datastore.DsProjectionStorage","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage/index.html","searchKeys":["DsProjectionStorage","public class DsProjectionStorage<I>","io.spine.server.storage.datastore.DsProjectionStorage"]},{"name":"public class DsProjectionStorageDelegate<I> extends DsRecordStorage<I>","description":"io.spine.server.storage.datastore.DsProjectionStorageDelegate","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage-delegate/index.html","searchKeys":["DsProjectionStorageDelegate","public class DsProjectionStorageDelegate<I> extends DsRecordStorage<I>","io.spine.server.storage.datastore.DsProjectionStorageDelegate"]},{"name":"public class DsPropertyStorage","description":"io.spine.server.storage.datastore.DsPropertyStorage","location":"datastore/io.spine.server.storage.datastore/-ds-property-storage/index.html","searchKeys":["DsPropertyStorage","public class DsPropertyStorage","io.spine.server.storage.datastore.DsPropertyStorage"]},{"name":"public class DsRecordStorage<I>","description":"io.spine.server.storage.datastore.DsRecordStorage","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/index.html","searchKeys":["DsRecordStorage","public class DsRecordStorage<I>","io.spine.server.storage.datastore.DsRecordStorage"]},{"name":"public class DsShardedWorkRegistry","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/index.html","searchKeys":["DsShardedWorkRegistry","public class DsShardedWorkRegistry","io.spine.server.storage.datastore.DsShardedWorkRegistry"]},{"name":"public enum DatastoreMode","description":"io.spine.server.storage.datastore.DatastoreMode","location":"datastore/io.spine.server.storage.datastore/-datastore-mode/index.html","searchKeys":["DatastoreMode","public enum DatastoreMode","io.spine.server.storage.datastore.DatastoreMode"]},{"name":"public final InboxStorage createInboxStorage(boolean multitenant)","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.createInboxStorage","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/create-inbox-storage.html","searchKeys":["createInboxStorage","public final InboxStorage createInboxStorage(boolean multitenant)","io.spine.server.storage.datastore.DatastoreStorageFactory.createInboxStorage"]},{"name":"public final TransactionWrapper newTransaction()","description":"io.spine.server.storage.datastore.DatastoreWrapper.newTransaction","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/new-transaction.html","searchKeys":["newTransaction","public final TransactionWrapper newTransaction()","io.spine.server.storage.datastore.DatastoreWrapper.newTransaction"]},{"name":"public final class Builder<I> extends RecordStorageBuilder<I, S, B>","description":"io.spine.server.storage.datastore.DsProjectionStorageDelegate.Builder","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage-delegate/-builder/index.html","searchKeys":["Builder","public final class Builder<I> extends RecordStorageBuilder<I, S, B>","io.spine.server.storage.datastore.DsProjectionStorageDelegate.Builder"]},{"name":"public final class Builder<I> extends RecordStorageBuilder<I, S, B>","description":"io.spine.server.storage.datastore.DsRecordStorage.Builder","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/-builder/index.html","searchKeys":["Builder","public final class Builder<I> extends RecordStorageBuilder<I, S, B>","io.spine.server.storage.datastore.DsRecordStorage.Builder"]},{"name":"public final class DatastoreTenants","description":"io.spine.server.storage.datastore.tenant.DatastoreTenants","location":"datastore/io.spine.server.storage.datastore.tenant/-datastore-tenants/index.html","searchKeys":["DatastoreTenants","public final class DatastoreTenants","io.spine.server.storage.datastore.tenant.DatastoreTenants"]},{"name":"public final class DsQueryIterator<R>","description":"io.spine.server.storage.datastore.DsQueryIterator","location":"datastore/io.spine.server.storage.datastore/-ds-query-iterator/index.html","searchKeys":["DsQueryIterator","public final class DsQueryIterator<R>","io.spine.server.storage.datastore.DsQueryIterator"]},{"name":"public final class DsSessionStorage extends DsMessageStorage<I, M, R>","description":"io.spine.server.storage.datastore.DsSessionStorage","location":"datastore/io.spine.server.storage.datastore/-ds-session-storage/index.html","searchKeys":["DsSessionStorage","public final class DsSessionStorage extends DsMessageStorage<I, M, R>","io.spine.server.storage.datastore.DsSessionStorage"]},{"name":"public final class Kind","description":"io.spine.server.storage.datastore.Kind","location":"datastore/io.spine.server.storage.datastore/-kind/index.html","searchKeys":["Kind","public final class Kind","io.spine.server.storage.datastore.Kind"]},{"name":"public final class Namespace","description":"io.spine.server.storage.datastore.tenant.Namespace","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace/index.html","searchKeys":["Namespace","public final class Namespace","io.spine.server.storage.datastore.tenant.Namespace"]},{"name":"public final class PrefixedNsConverterFactory implements NsConverterFactory","description":"io.spine.server.storage.datastore.tenant.PrefixedNsConverterFactory","location":"datastore/io.spine.server.storage.datastore.tenant/-prefixed-ns-converter-factory/index.html","searchKeys":["PrefixedNsConverterFactory","public final class PrefixedNsConverterFactory implements NsConverterFactory","io.spine.server.storage.datastore.tenant.PrefixedNsConverterFactory"]},{"name":"public final class ProjectId extends DsIdentifier","description":"io.spine.server.storage.datastore.ProjectId","location":"datastore/io.spine.server.storage.datastore/-project-id/index.html","searchKeys":["ProjectId","public final class ProjectId extends DsIdentifier","io.spine.server.storage.datastore.ProjectId"]},{"name":"public final class TransactionWrapper implements AutoCloseable","description":"io.spine.server.storage.datastore.TransactionWrapper","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/index.html","searchKeys":["TransactionWrapper","public final class TransactionWrapper implements AutoCloseable","io.spine.server.storage.datastore.TransactionWrapper"]},{"name":"public final void write(I id, M message)","description":"io.spine.server.storage.datastore.DsMessageStorage.write","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/write.html","searchKeys":["write","public final void write(I id, M message)","io.spine.server.storage.datastore.DsMessageStorage.write"]},{"name":"public interface NsConverterFactory","description":"io.spine.server.storage.datastore.tenant.NsConverterFactory","location":"datastore/io.spine.server.storage.datastore.tenant/-ns-converter-factory/index.html","searchKeys":["NsConverterFactory","public interface NsConverterFactory","io.spine.server.storage.datastore.tenant.NsConverterFactory"]},{"name":"public int hashCode()","description":"io.spine.server.storage.datastore.tenant.Namespace.hashCode","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace/hash-code.html","searchKeys":["hashCode","public int hashCode()","io.spine.server.storage.datastore.tenant.Namespace.hashCode"]},{"name":"public static Array<DatastoreMode> values()","description":"io.spine.server.storage.datastore.DatastoreMode.values","location":"datastore/io.spine.server.storage.datastore/-datastore-mode/values.html","searchKeys":["values","public static Array<DatastoreMode> values()","io.spine.server.storage.datastore.DatastoreMode.values"]},{"name":"public static DatastoreMode valueOf(String name)","description":"io.spine.server.storage.datastore.DatastoreMode.valueOf","location":"datastore/io.spine.server.storage.datastore/-datastore-mode/value-of.html","searchKeys":["valueOf","public static DatastoreMode valueOf(String name)","io.spine.server.storage.datastore.DatastoreMode.valueOf"]},{"name":"public static DatastoreStorageFactory.Builder newBuilder()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.newBuilder","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/new-builder.html","searchKeys":["newBuilder","public static DatastoreStorageFactory.Builder newBuilder()","io.spine.server.storage.datastore.DatastoreStorageFactory.newBuilder"]},{"name":"public static DsProjectionStorageDelegate.Builder<I> newDelegateBuilder<I>()","description":"io.spine.server.storage.datastore.DsProjectionStorageDelegate.newDelegateBuilder","location":"datastore/io.spine.server.storage.datastore/-ds-projection-storage-delegate/new-delegate-builder.html","searchKeys":["newDelegateBuilder","public static DsProjectionStorageDelegate.Builder<I> newDelegateBuilder<I>()","io.spine.server.storage.datastore.DsProjectionStorageDelegate.newDelegateBuilder"]},{"name":"public static DsRecordStorage.Builder<I> newBuilder<I>()","description":"io.spine.server.storage.datastore.DsRecordStorage.newBuilder","location":"datastore/io.spine.server.storage.datastore/-ds-record-storage/new-builder.html","searchKeys":["newBuilder","public static DsRecordStorage.Builder<I> newBuilder<I>()","io.spine.server.storage.datastore.DsRecordStorage.newBuilder"]},{"name":"public static Kind of(Descriptor descriptor)","description":"io.spine.server.storage.datastore.Kind.of","location":"datastore/io.spine.server.storage.datastore/-kind/of.html","searchKeys":["of","public static Kind of(Descriptor descriptor)","io.spine.server.storage.datastore.Kind.of"]},{"name":"public static Kind of(Message message)","description":"io.spine.server.storage.datastore.Kind.of","location":"datastore/io.spine.server.storage.datastore/-kind/of.html","searchKeys":["of","public static Kind of(Message message)","io.spine.server.storage.datastore.Kind.of"]},{"name":"public static Kind of(String value)","description":"io.spine.server.storage.datastore.Kind.of","location":"datastore/io.spine.server.storage.datastore/-kind/of.html","searchKeys":["of","public static Kind of(String value)","io.spine.server.storage.datastore.Kind.of"]},{"name":"public static Kind of(TypeName typeName)","description":"io.spine.server.storage.datastore.Kind.of","location":"datastore/io.spine.server.storage.datastore/-kind/of.html","searchKeys":["of","public static Kind of(TypeName typeName)","io.spine.server.storage.datastore.Kind.of"]},{"name":"public static Kind of(TypeUrl typeUrl)","description":"io.spine.server.storage.datastore.Kind.of","location":"datastore/io.spine.server.storage.datastore/-kind/of.html","searchKeys":["of","public static Kind of(TypeUrl typeUrl)","io.spine.server.storage.datastore.Kind.of"]},{"name":"public static Kind ofNamespace()","description":"io.spine.server.storage.datastore.Kind.ofNamespace","location":"datastore/io.spine.server.storage.datastore/-kind/of-namespace.html","searchKeys":["ofNamespace","public static Kind ofNamespace()","io.spine.server.storage.datastore.Kind.ofNamespace"]},{"name":"public static NamespaceSupplier multitenant(NsConverterFactory converterFactory)","description":"io.spine.server.storage.datastore.tenant.NamespaceSupplier.multitenant","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-supplier/multitenant.html","searchKeys":["multitenant","public static NamespaceSupplier multitenant(NsConverterFactory converterFactory)","io.spine.server.storage.datastore.tenant.NamespaceSupplier.multitenant"]},{"name":"public static NamespaceSupplier singleTenant()","description":"io.spine.server.storage.datastore.tenant.NamespaceSupplier.singleTenant","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-supplier/single-tenant.html","searchKeys":["singleTenant","public static NamespaceSupplier singleTenant()","io.spine.server.storage.datastore.tenant.NamespaceSupplier.singleTenant"]},{"name":"public static NamespaceSupplier singleTenant(String defaultNamespace)","description":"io.spine.server.storage.datastore.tenant.NamespaceSupplier.singleTenant","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-supplier/single-tenant.html","searchKeys":["singleTenant","public static NamespaceSupplier singleTenant(String defaultNamespace)","io.spine.server.storage.datastore.tenant.NamespaceSupplier.singleTenant"]},{"name":"public static NsConverterFactory defaults()","description":"io.spine.server.storage.datastore.tenant.NsConverterFactory.defaults","location":"datastore/io.spine.server.storage.datastore.tenant/-ns-converter-factory/defaults.html","searchKeys":["defaults","public static NsConverterFactory defaults()","io.spine.server.storage.datastore.tenant.NsConverterFactory.defaults"]},{"name":"public static ProjectId of(Datastore datastore)","description":"io.spine.server.storage.datastore.ProjectId.of","location":"datastore/io.spine.server.storage.datastore/-project-id/of.html","searchKeys":["of","public static ProjectId of(Datastore datastore)","io.spine.server.storage.datastore.ProjectId.of"]},{"name":"public static ProjectId of(String projectId)","description":"io.spine.server.storage.datastore.ProjectId.of","location":"datastore/io.spine.server.storage.datastore/-project-id/of.html","searchKeys":["of","public static ProjectId of(String projectId)","io.spine.server.storage.datastore.ProjectId.of"]},{"name":"public static TenantIndex index(Datastore datastore, NsConverterFactory converterFactory)","description":"io.spine.server.storage.datastore.tenant.DatastoreTenants.index","location":"datastore/io.spine.server.storage.datastore.tenant/-datastore-tenants/--index--.html","searchKeys":["index","public static TenantIndex index(Datastore datastore, NsConverterFactory converterFactory)","io.spine.server.storage.datastore.tenant.DatastoreTenants.index"]},{"name":"public synchronized Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.releaseExpiredSessions","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/release-expired-sessions.html","searchKeys":["releaseExpiredSessions","public synchronized Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","io.spine.server.storage.datastore.DsShardedWorkRegistry.releaseExpiredSessions"]},{"name":"public synchronized PickUpOutcome pickUp(ShardIndex index, NodeId nodeId)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.pickUp","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/pick-up.html","searchKeys":["pickUp","public synchronized PickUpOutcome pickUp(ShardIndex index, NodeId nodeId)","io.spine.server.storage.datastore.DsShardedWorkRegistry.pickUp"]},{"name":"public void DsColumnMapping()","description":"io.spine.server.storage.datastore.DsColumnMapping.DsColumnMapping","location":"datastore/io.spine.server.storage.datastore/-ds-column-mapping/-ds-column-mapping.html","searchKeys":["DsColumnMapping","public void DsColumnMapping()","io.spine.server.storage.datastore.DsColumnMapping.DsColumnMapping"]},{"name":"public void DsShardedWorkRegistry(DatastoreStorageFactory factory)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.DsShardedWorkRegistry","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/-ds-sharded-work-registry.html","searchKeys":["DsShardedWorkRegistry","public void DsShardedWorkRegistry(DatastoreStorageFactory factory)","io.spine.server.storage.datastore.DsShardedWorkRegistry.DsShardedWorkRegistry"]},{"name":"public void NamespaceConverter()","description":"io.spine.server.storage.datastore.tenant.NamespaceConverter.NamespaceConverter","location":"datastore/io.spine.server.storage.datastore.tenant/-namespace-converter/-namespace-converter.html","searchKeys":["NamespaceConverter","public void NamespaceConverter()","io.spine.server.storage.datastore.tenant.NamespaceConverter.NamespaceConverter"]},{"name":"public void PrefixedNsConverterFactory(String namespacePrefix, NsConverterFactory delegate)","description":"io.spine.server.storage.datastore.tenant.PrefixedNsConverterFactory.PrefixedNsConverterFactory","location":"datastore/io.spine.server.storage.datastore.tenant/-prefixed-ns-converter-factory/-prefixed-ns-converter-factory.html","searchKeys":["PrefixedNsConverterFactory","public void PrefixedNsConverterFactory(String namespacePrefix, NsConverterFactory delegate)","io.spine.server.storage.datastore.tenant.PrefixedNsConverterFactory.PrefixedNsConverterFactory"]},{"name":"public void close()","description":"io.spine.server.storage.datastore.DatastoreStorageFactory.close","location":"datastore/io.spine.server.storage.datastore/-datastore-storage-factory/close.html","searchKeys":["close","public void close()","io.spine.server.storage.datastore.DatastoreStorageFactory.close"]},{"name":"public void close()","description":"io.spine.server.storage.datastore.TransactionWrapper.close","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/close.html","searchKeys":["close","public void close()","io.spine.server.storage.datastore.TransactionWrapper.close"]},{"name":"public void commit()","description":"io.spine.server.storage.datastore.TransactionWrapper.commit","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/commit.html","searchKeys":["commit","public void commit()","io.spine.server.storage.datastore.TransactionWrapper.commit"]},{"name":"public void create(Collection<Entity> entities)","description":"io.spine.server.storage.datastore.TransactionWrapper.create","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/create.html","searchKeys":["create","public void create(Collection<Entity> entities)","io.spine.server.storage.datastore.TransactionWrapper.create"]},{"name":"public void create(Entity entity)","description":"io.spine.server.storage.datastore.DatastoreWrapper.create","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/create.html","searchKeys":["create","public void create(Entity entity)","io.spine.server.storage.datastore.DatastoreWrapper.create"]},{"name":"public void create(Entity entity)","description":"io.spine.server.storage.datastore.TransactionWrapper.create","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/create.html","searchKeys":["create","public void create(Entity entity)","io.spine.server.storage.datastore.TransactionWrapper.create"]},{"name":"public void createOrUpdate(Array<Entity> entities)","description":"io.spine.server.storage.datastore.DatastoreWrapper.createOrUpdate","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/create-or-update.html","searchKeys":["createOrUpdate","public void createOrUpdate(Array<Entity> entities)","io.spine.server.storage.datastore.DatastoreWrapper.createOrUpdate"]},{"name":"public void createOrUpdate(Collection<Entity> entities)","description":"io.spine.server.storage.datastore.DatastoreWrapper.createOrUpdate","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/create-or-update.html","searchKeys":["createOrUpdate","public void createOrUpdate(Collection<Entity> entities)","io.spine.server.storage.datastore.DatastoreWrapper.createOrUpdate"]},{"name":"public void createOrUpdate(Collection<Entity> entities)","description":"io.spine.server.storage.datastore.TransactionWrapper.createOrUpdate","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/create-or-update.html","searchKeys":["createOrUpdate","public void createOrUpdate(Collection<Entity> entities)","io.spine.server.storage.datastore.TransactionWrapper.createOrUpdate"]},{"name":"public void createOrUpdate(Entity entity)","description":"io.spine.server.storage.datastore.DatastoreWrapper.createOrUpdate","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/create-or-update.html","searchKeys":["createOrUpdate","public void createOrUpdate(Entity entity)","io.spine.server.storage.datastore.DatastoreWrapper.createOrUpdate"]},{"name":"public void createOrUpdate(Entity entity)","description":"io.spine.server.storage.datastore.TransactionWrapper.createOrUpdate","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/create-or-update.html","searchKeys":["createOrUpdate","public void createOrUpdate(Entity entity)","io.spine.server.storage.datastore.TransactionWrapper.createOrUpdate"]},{"name":"public void delete(Array<Key> keys)","description":"io.spine.server.storage.datastore.DatastoreWrapper.delete","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/delete.html","searchKeys":["delete","public void delete(Array<Key> keys)","io.spine.server.storage.datastore.DatastoreWrapper.delete"]},{"name":"public void delete(Array<Key> keys)","description":"io.spine.server.storage.datastore.TransactionWrapper.delete","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/delete.html","searchKeys":["delete","public void delete(Array<Key> keys)","io.spine.server.storage.datastore.TransactionWrapper.delete"]},{"name":"public void release(ShardSessionRecord session)","description":"io.spine.server.storage.datastore.DsShardedWorkRegistry.release","location":"datastore/io.spine.server.storage.datastore/-ds-sharded-work-registry/release.html","searchKeys":["release","public void release(ShardSessionRecord session)","io.spine.server.storage.datastore.DsShardedWorkRegistry.release"]},{"name":"public void removeAll(Iterable<InboxMessage> messages)","description":"io.spine.server.storage.datastore.DsInboxStorage.removeAll","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/remove-all.html","searchKeys":["removeAll","public void removeAll(Iterable<InboxMessage> messages)","io.spine.server.storage.datastore.DsInboxStorage.removeAll"]},{"name":"public void removeAll(Iterable<M> messages)","description":"io.spine.server.storage.datastore.DsMessageStorage.removeAll","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/remove-all.html","searchKeys":["removeAll","public void removeAll(Iterable<M> messages)","io.spine.server.storage.datastore.DsMessageStorage.removeAll"]},{"name":"public void removeAllTransactionally(Iterable<M> messages)","description":"io.spine.server.storage.datastore.DsMessageStorage.removeAllTransactionally","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/remove-all-transactionally.html","searchKeys":["removeAllTransactionally","public void removeAllTransactionally(Iterable<M> messages)","io.spine.server.storage.datastore.DsMessageStorage.removeAllTransactionally"]},{"name":"public void rollback()","description":"io.spine.server.storage.datastore.TransactionWrapper.rollback","location":"datastore/io.spine.server.storage.datastore/-transaction-wrapper/rollback.html","searchKeys":["rollback","public void rollback()","io.spine.server.storage.datastore.TransactionWrapper.rollback"]},{"name":"public void update(Entity entity)","description":"io.spine.server.storage.datastore.DatastoreWrapper.update","location":"datastore/io.spine.server.storage.datastore/-datastore-wrapper/update.html","searchKeys":["update","public void update(Entity entity)","io.spine.server.storage.datastore.DatastoreWrapper.update"]},{"name":"public void write(InboxMessage message)","description":"io.spine.server.storage.datastore.DsInboxStorage.write","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/write.html","searchKeys":["write","public void write(InboxMessage message)","io.spine.server.storage.datastore.DsInboxStorage.write"]},{"name":"public void write(M message)","description":"io.spine.server.storage.datastore.DsMessageStorage.write","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/write.html","searchKeys":["write","public void write(M message)","io.spine.server.storage.datastore.DsMessageStorage.write"]},{"name":"public void write(ShardSessionRecord message)","description":"io.spine.server.storage.datastore.DsSessionStorage.write","location":"datastore/io.spine.server.storage.datastore/-ds-session-storage/write.html","searchKeys":["write","public void write(ShardSessionRecord message)","io.spine.server.storage.datastore.DsSessionStorage.write"]},{"name":"public void writeAll(Iterable<InboxMessage> messages)","description":"io.spine.server.storage.datastore.DsInboxStorage.writeAll","location":"datastore/io.spine.server.storage.datastore/-ds-inbox-storage/write-all.html","searchKeys":["writeAll","public void writeAll(Iterable<InboxMessage> messages)","io.spine.server.storage.datastore.DsInboxStorage.writeAll"]},{"name":"public void writeAll(Iterable<M> messages)","description":"io.spine.server.storage.datastore.DsMessageStorage.writeAll","location":"datastore/io.spine.server.storage.datastore/-ds-message-storage/write-all.html","searchKeys":["writeAll","public void writeAll(Iterable<M> messages)","io.spine.server.storage.datastore.DsMessageStorage.writeAll"]},{"name":"public void writeLifecycleFlags(I id, LifecycleFlags flags)","description":"io.spine.server.storage.datastore.DsAggregateStorage.writeLifecycleFlags","location":"datastore/io.spine.server.storage.datastore/-ds-aggregate-storage/write-lifecycle-flags.html","searchKeys":["writeLifecycleFlags","public void writeLifecycleFlags(I id, LifecycleFlags flags)","io.spine.server.storage.datastore.DsAggregateStorage.writeLifecycleFlags"]}]
