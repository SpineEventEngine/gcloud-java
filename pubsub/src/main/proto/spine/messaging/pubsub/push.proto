/*
 * Copyright 2023, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.messaging.pubsub;

import "spine/options.proto";

option java_outer_classname = "PubsubPushProto";
option java_package = "io.spine.pubsub";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/pubsub/v1/pubsub.proto";

// The definition of the <a href="https://cloud.google.com/pubsub">Pub/Sub</a> push request message
// that is sent by the Pub/Sub service when used with push subscriptions.
//
// The push request looks like the example below in its canonical form.
//
// ```
// {
//   "message": {
//     "attributes": {
//       "key": "value"
//     },
//     "data": "U3BpbmUgbG92ZXMgUHViL1N1YiE=",
//     "messageId": "136969346945",
//     "publishTime": "2020-06-24T13:05:36.021Z"
//   },
//   "subscription": "projects/myproject/subscriptions/mysubscription"
// }
// ```
//
// See <a href="https://cloud.google.com/pubsub/docs/push#receiving_push_messages">
// receiving messages using Push</a> for more information.
//
message PubsubPushRequest {

    // The Pub/Sub message payload of the push request.
    google.pubsub.v1.PubsubMessage message = 1 [(required) = true];

    // The name of the Pub/Sub subscription that pushed the current request.
    //
    // Format is `projects/{project}/subscriptions/{subscription}`.
    //
    string subscription = 2 [(required) = true, (pattern).regex = "projects/.+/subscriptions/.+"];
}
